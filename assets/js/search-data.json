{
  
    
        "post0": {
            "title": "Common mathematical equations and a suitable Python implementation of the same",
            "content": ". Note: H/T Math Symbols for Programmers by Amit Chaudhary for the idea and code examples. . Introduce vector X. Then access the its value at index i. . X i X = [10, 20, 30] # refx: https://stackoverflow.com/a/36042565 i = 0 print(f&quot;{X[i]}&quot;) # first item of list . 10 . Extend the prior example as a now 2-D vector X. . X i j X = [[1, 3, 5], [10, 8, 6]] i = 1 j = 0 print(f&quot;{X[i][j]}&quot;) # first item of second list . 10 . Sigma (summation) is for the sum of all elements in a vector for a given range, lower and upper limits inclusive. . &amp;#x2211; i = 1 N X i In Python, we will loop over the vector from the first item (index: 0) to the last item (index: count n of items less 1). The value of each item is then aggregated to the result total. . x = [1, 3, 5, 7, 9] result = 0 N = len(x) for i in range(N): result += x[i] print(f&quot;Summation of x: {result}&quot;) ## or do: # result = sum(x) . Summation of x: 25 . Use Sigma again, this time calculating the average value of all the elements in a vector for a given range. . 1 N &amp;#x2211; i = 1 N x i x = [1, 17, 31, 62, 99] result = 0 N = len(x) for i in range(N): result += x[i] average = result / N print(f&quot;Summation of x: {result}&quot;) print(f&quot;Average of x: {average}&quot;) . Summation of x: 210 Average of x: 42.0 . Pi is for the product of all elements in a vector for a given range. . &amp;#x220F; i = 1 N x i In Python, loop over the vector from the first item to the last item and multiply the values. n.b. Never seen in the context of the 2019/20 Data Science Immersive . x = [1, 3, 5, 7, 9] result = 1 # The action is multiplicative, so do not multiply the first item by zero! N = len(x) for i in range(N): result *= x[i] print(f&quot;Product of x: {result}&quot;) . Product of x: 945 . Pipe means different things depending on how its applied. To fence a number with a single pipe means to returns the absolute value of that number. . x Whereas, to fence a number with a double pipe is to calculate &quot;the norm&quot;, sometimes called the magnitude, of the vector. . x In Python, this means taking each element in a list, summing them, and taking the square root. . import math # for step 2, below x = -10 print(f&quot;Absolute value of x: {abs(x)}&quot;) y = [1, 3, 5, 7, 9] result = 0 N = len(y) for i in range(N): result += y[i] **2 print(f&quot;Norm of y: {math.sqrt(result)}&quot;) . Absolute value of x: 10 Norm of y: 12.84523257866513 . Epsilon finds whether an element is part of a set. . 3 &amp;#x2208; X In Python, this is done by the in comparison operator. . x = {1, 3, 5} 3 in x . True . Function f where elements of X are mapped to range Y. . f : X &amp;#x2192; Y In Python, this is the general form of a function. . X = [&#39;bird&#39;, &#39;cat&#39;, &#39;dog&#39;] def f(inputs): inputs_len = 0 N = len(inputs) for i in range(N): inputs_len += len(inputs[i]) return inputs_len Y = f(X) print(f&quot;The length of the inputs in X: {Y}&quot;) . The length of the words in X: 10 . Function may come again using symbol R in place of X and Y. R means that the input and output are real numbers and can have any value - int, float, rational, irrational. . f : &amp;#x211D; &amp;#x2192; &amp;#x211D; In Python, this is equivalent to any value except complex numbers. . import math x = 42 y = math.pi print(f&quot;{x}, {y}&quot;) . 42, 3.141592653589793 . And once more, Rd means a d-dimensional vector of real numbers. . f : &amp;#x211D; d &amp;#x2192; &amp;#x211D; In Python, an example function may take a 2-D input and return the sum product. . import numpy as np X = [1, 3] f = np.sum # This was an interesting example to me, it returns a function for one input Y = f(X) print(f&quot;{Y}&quot;) . 4 . Transpose will exchange the rows and columns. . X T import numpy as np X = [[1, 3, 5], [2, 4, 6]] np.transpose(X) . array([[1, 2], [3, 4], [5, 6]]) . Element-wise multiplication. . Z = X &amp;#x2299; Y In Python, you would multiply the corresponding elements of two lists. n.b. Never seen in the context of the 2019/20 Data Science Immersive . import numpy as np X = [[1, 3], [5, 7]] Y = [[2, 4], [6, 8]] Z = np.multiply(X, Y) print(f&quot;Element-wise product of these two arrays: {Z}&quot;) . Element-wise product of these two arrays: [[ 2 12] [30 56]] . Dot Product gives the sum product of the elements in two sequences of numbers. . X Y X &amp;#xb7; Y X = [1, 3, 5] Y = [2, 4, 6] dot_prd = sum([i*j for i,j in zip(X, Y)]) print(f&quot;Dot product of these two arrays: {dot_prd}&quot;) . Dot product of these two arrays: 44 . Hat is for the unit vector. This means dividing each element in a vector by its length (norm). . x import math x = [1, 3, 5] length = math.sqrt(sum([e**2 for e in x])) x_hat = [e/length for e in x] print(f&quot;x `hat`: {x_hat}&quot;) . x `hat`: [0.1690308509457033, 0.50709255283711, 0.8451542547285166] . # Make magnitude of the vector 1 and keep the direction import math math.sqrt(sum([e**2 for e in x_hat])) . 1.0 . Exclamation is for the factorial of a number. . x ! In Python, you calculate the sum product from the scalar from its range (or just use a built-in function). . X = 5 factor = 1 for i in range(X, 0 , -1): factor = factor * i print(f&quot;Factorial of {X}: {factor}&quot;) ## Or do: # import math # math.factorial(X) . Factorial of 5: 120 . . . Note: From here down are symbols encountered in the 2019/20 Data Science Immersive that need more time for example. . Mu mean of the population. . &amp;#x00B5; Sigma standard deviation of the population . &amp;#x03C3; Alpha Type 1 error rate . &amp;#x03C3; Beta regression coefficients (population) . &amp;#x03B2; Theta a general population parameter . &amp;#x0398;",
            "url": "https://seanflaherty.com/jupyter%20notebook/2020/03/26/math-symbols-for-devs.html",
            "relUrl": "/jupyter%20notebook/2020/03/26/math-symbols-for-devs.html",
            "date": " • Mar 26, 2020"
        }
        
    
  
    
  
    
        ,"post2": {
            "title": "Hilary Mason (@hmason) on receiving 24 requests for career advice",
            "content": "I received 24 requests for data science career advice over the holiday break. One theme: junior roles are hard to find and evaluate.Do you work at a company with a career path for data scientists? Would you recommend it for early-career data scientists? . &mdash; Hilary Mason (@hmason) December 27, 2017 .",
            "url": "https://seanflaherty.com/tweets/2017/12/27/hmason-datascience.html",
            "relUrl": "/tweets/2017/12/27/hmason-datascience.html",
            "date": " • Dec 27, 2017"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Hello! . My name is Sean Flaherty and I am a full stack Business Intelligence developer from Boston, MA. . As a 20+ year IT professional, I have worked with many clients improving and modernizing their data analytics. Most recently, I have successfully completed the 2019/20 Data Science Immersive from General Assembly and have actively fed my curosity in DevOps. . Get in touch by email. . This website is powered by fastpages 1. . An easy to use blogging platform with extra features for Jupyter Notebooks. &#8617; . |",
          "url": "https://seanflaherty.com/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

}